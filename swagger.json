{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Wallet-Api",
    "description": "Wallet Api documentation",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    {
      "url": "https://wallet-backend-app-api.herokuapp.com/"
    },
    {
      "url": "http://localhost:5000"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Transaction",
      "description": "Transaction endpoints"
    },
    {
      "name": "Categories",
      "description": "Categories endpoints"
    }
  ],
  "paths": {
    "/api/auth/users/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "Users registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/api/auth/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Users authentication",
        "parameters": [],
        "requestBody": {
          "description": "Authentication's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "403": {
            "description": "Email doesn't exist / Password is wrong",
            "content": {}
          }
        }
      }
    },
    "/api/auth/logout": {
      "get": {
        "tags": ["Auth"],
        "summary": "Logout",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "description": "Empty request",
          "required": false
        },
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "400": {
            "description": "No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/api/auth/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get info about user",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "description": "About user object",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "403": {
            "description": "Email doesn't exist / Password is wrong",
            "content": {}
          }
        }
      }
    },
    "/api/transactions/create": {
      "post": {
        "tags": ["Transaction"],
        "summary": "Create a transaction",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "Transaction's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/api/transactions": {
      "get": {
        "tags": ["Transaction"],
        "summary": "Get user transactions",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "type": "integer",
            "description": "Number of pagination page"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "description": "Number of transaction count in page"
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionGetResponse"
                }
              }
            }
          },

          "400": {
            "description": "Bad request (invalid request body) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/api/transactions/filter": {
      "get": {
        "tags": ["Transaction"],
        "summary": "Get user transactions",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "type": "integer",
            "description": "Number of pagination page"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "description": "Number of transaction count in page"
          },
          {
            "in": "query",
            "name": "month",
            "type": "integer",
            "description": "Number of munth"
          },
          {
            "in": "query",
            "name": "year",
            "type": "integer",
            "description": "Number of transaction count in year"
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionGetResponse"
                }
              }
            }
          },

          "400": {
            "description": "Bad request (invalid request body) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/api/categories": {
      "get": {
        "tags": ["Categories"],
        "summary": "Get categories list",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriesRequest"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "John"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "example@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "required": ["id", "email", "name"],
        "properties": {
          "id": {
            "type": "string",
            "description": "User's id",
            "example": "1asd21231dsa213sda"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "John"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "example@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Access token (needed for all requests), life time 1 hour",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI1ZmMyMDg1YmQwOTM2NTI4MTA3Y2UyNzQiLCJzaWQiOiI1ZmMyZDJmY2UxZDIwNTA2NzAyYmRkMjIiLCJpYXQiOjE2MDY2MDM1MTYsImV4cCI6MTYwNjYwNzExNn0.rJ_QjU4KvA76H96RHsvOBChK0Vjbd0NmqjMxdQVJIXA"
          }
        }
      },
      "LogoutRequest": {
        "required": ["token"]
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "code": 204,
            "example": "NO CONTENT"
          }
        }
      },
      "CurrentRequest": {
        "required": ["token"]
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "John"
          },
          "id": {
            "type": "string",
            "description": "User's id",
            "example": "123hndsadaJo231dsa1"
          }
        }
      },
      "TransactionCreateRequest": {
        "type": "object",
        "required": ["date", "type", "category", "amount"],
        "optional": ["comment"],
        "properties": {
          "date": {
            "type": "string",
            "description": "Transaction's create date",
            "example": "2021-02-01"
          },
          "type": {
            "type": "string",
            "description": "Transaction's type",
            "example": "+"
          },
          "category": {
            "type": "string",
            "description": "Transaction's category",
            "example": "Regular income"
          },
          "amount": {
            "type": "string",
            "description": "Amount of transaction",
            "example": "500"
          },
          "comment": {
            "type": "string",
            "description": "Comment for transaction description",
            "example": "January salary"
          }
        }
      },

      "TransactionCreateResponse": {
        "type": "object",
        "required": [
          "amount",
          "type",
          "category",
          "comment",
          "date",
          "balance",
          "owner",
          "createdAt",
          "updatedAt",
          "year",
          "month",
          "id"
        ],
        "properties": {
          "amount": {
            "type": "number",
            "description": "Amount of transaction",
            "example": 500
          },
          "type": {
            "type": "string",
            "description": "Transaction's type",
            "example": "+"
          },
          "category": {
            "type": "string",
            "description": "Transaction's category",
            "example": "Regular income"
          },
          "comment": {
            "type": "string",
            "description": "Comment for transaction description",
            "example": "January salary"
          },
          "date": {
            "type": "string",
            "description": "Transaction's create date",
            "example": "2021-02-01"
          },
          "balance": {
            "type": "number",
            "description": "User's balance after add transaction",
            "example": 1000
          },
          "owner": {
            "type": "string",
            "description": "User's id who creates this transaction",
            "example": "61994b7dc2b3164f924883cc"
          },
          "createdAt": {
            "type": "string",
            "description": "Time when transaction was created on server",
            "example": "2021-11-20T19:37:20.178Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Time when transaction was updated on server",
            "example": "2021-11-20T19:37:20.178Z"
          },
          "year": {
            "type": "integer",
            "description": "Year when transaction was payed",
            "example": 2022
          },
          "month": {
            "type": "integer",
            "description": "Month of year when transaction was payed",
            "example": 2
          },
          "id": {
            "type": "string",
            "description": "Transaction's id",
            "example": "61994e70df4763ac4010ed06"
          }
        }
      },
      "TransactionGetResponse": {
        "type": "array",
        "items": {
          "required": [
            "amount",
            "type",
            "category",
            "comment",
            "date",
            "balance",
            "owner",
            "createdAt",
            "updatedAt",
            "year",
            "month",
            "id"
          ],
          "properties": {
            "amount": {
              "type": "number",
              "description": "Amount of transaction",
              "example": 500
            },
            "type": {

                "type": "string",
                "description": "Transaction's type",
                "example": "income/expense"
            },
            "category": {
              "type": "string",
              "description": "Transaction's category",
              "example": "Regular income"
            },
            "comment": {
              "type": "string",
              "description": "Comment for transaction description",
              "example": "January salary"
            },
            "date": {
              "type": "string",
              "description": "Transaction's create date",
              "example": "2021-02-01"
            },
            "balance": {
              "type": "number",
              "description": "User's balance after add transaction",
              "example": 1000
            },
            "owner": {
              "type": "string",
              "description": "User's id who creates this transaction",
              "example": "61994b7dc2b3164f924883cc"
            },
            "createdAt": {
              "type": "string",
              "description": "Time when transaction was created on server",
              "example": "2021-11-20T19:37:20.178Z"
            },
            "updatedAt": {
              "type": "string",
              "description": "Time when transaction was updated on server",
              "example": "2021-11-20T19:37:20.178Z"
            },
            "year": {
              "type": "integer",
              "description": "Year when transaction was payed",
              "example": 2022
            },
            "month": {
              "type": "integer",
              "description": "Month of year when transaction was payed",
              "example": 2
            },
            "id": {
              "type": "string",
              "description": "Transaction's id",
              "example": "61994e70df4763ac4010ed06"
            }
          }
        }
      },
      "CategoriesRequest": {
        "type": "array",
        "items": {
          "required": ["email", "password"],
          "properties": {
            "id": {
              "type": "integer",
              "description": "Categorie's id",
              "format": "email",
              "example": "1"
            },
            "name": {
              "type": "string",
              "description": "Categorie's name",
              "example": "qwerty123"
            }
          }
        }
      }
    },

    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
